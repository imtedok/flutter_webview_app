workflows:
  flutter_webview_app:
    name: Flutter WebView App
    max_build_duration: 60
    environment:
      groups:
        - base # 创建一个环境变量组，在 Codemagic UI 中设置 PGYER_UKEY 和 PGYER_API_KEY
      flutter: stable
      xcode: latest
      cocoapods: default

      # iOS 代码签名配置
      ios_signing:
        distribution_type: ad_hoc # 根据你的证书类型修改: ad_hoc | app_store | development | enterprise
        bundle_identifier: com.ccgametest.live
        # 证书和描述文件会自动被 Codemagic 应用到项目中

    cache:
      cache_paths:
        - $HOME/.pub-cache
        - $HOME/.gradle/caches

    scripts:
      - name: Install dependencies
        script: flutter pub get

      - name: Check Flutter environment
        script: flutter doctor -v

      # Android 构建 - 保持不变
      - name: Build Android APK
        script: |
          flutter build apk --no-tree-shake-icons --split-per-abi

      # iOS 构建 - 完全重写
      - name: Build iOS IPA
        script: |
          # 关键：使用 'flutter build ipa' 命令而不是 'flutter build ios'
          # 'flutter build ipa' 会处理整个流程：编译、签名并导出为 .ipa 文件
          # --export-options-plist 是可选的，但可以用来精确控制导出行为
          flutter build ipa --release --no-tree-shake-icons \
            --export-options-plist $CM_BUILD_DIR/export_options.plist

          # 打印输出目录信息，便于调试
          echo "IPA 文件可能位于: $CM_BUILD_DIR/build/ios/ipa"
          ls -la $CM_BUILD_DIR/build/ios/ipa/

      # 创建导出选项文件（可选但推荐）
      # 这个脚本会在项目根目录生成一个 export_options.plist 文件，
      # 用于指定分发方式（与 ios_signing.distribution_type 保持一致）
      - name: Create export options plist
        script: |
          cat >> export_options.plist <<EOL
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>destination</key>
            <string>export</string>
            <key>method</key>
            <string>ad-hoc</string> <!-- 必须与 ios_signing.distribution_type 对应 -->
            <key>compileBitcode</key>
            <false/>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
          </dict>
          </plist>
          EOL
        # 注意：此步骤必须在 'flutter build ipa' 之前运行，所以我把它的名字放在前面，但执行顺序由 codemagic 保证（根据定义顺序）

    artifacts:
      - build/app/outputs/flutter-apk/**/*.apk
      - build/ios/ipa/*.ipa # 'flutter build ipa' 的输出目录

    publishing:
      email:
        recipients:
          - xs121913958@163.com

      scripts:
        - name: Upload to Pgyer
          script: |
            # 上传 Android APK (匹配多个ABI版本的APK)
            for apk in $(find build/app/outputs/flutter-apk -name "*.apk"); do
              echo "上传 Android APK: $apk 到蒲公英..."
              curl -F "file=@$apk" \
                   -F "uKey=$PGYER_UKEY" \
                   -F "_api_key=$PGYER_API_KEY" \
                   https://www.pgyer.com/apiv2/app/upload
              echo "" # 换行
            done

            # 上传 iOS IPA
            # 'flutter build ipa' 输出的ipa文件名是固定的
            IPA_PATH="$CM_BUILD_DIR/build/ios/ipa/Runner.ipa"
            if [ -f "$IPA_PATH" ]; then
              echo "上传 iOS IPA 到蒲公英..."
              curl -F "file=@$IPA_PATH" \
                   -F "uKey=$PGYER_UKEY" \
                   -F "_api_key=$PGYER_API_KEY" \
                   https://www.pgyer.com/apiv2/app/upload
            else
              echo "错误: 未找到 IPA 文件 $IPA_PATH"
              exit 1 # 上传失败视作构建失败
            fi