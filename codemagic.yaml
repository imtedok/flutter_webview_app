workflows:
  # Flutter构建流水线
  flutter-workflow:
    name: Flutter Workflow
    instance_type: mac_mini_m2
    max_build_duration: 120
    # integrations:
    #   app_store_connect: for_codemagic
    environment:
      #groups:
        #- group-name
      # android签名信息
      android_signing:
        - cc_game_apk_jks
      # ios签名信息
      # ios_signing:
      #   distribution_type: ad_hoc
      #   # ios 包名必须指定，请注意跟 PACKAGE_NAME 须保持一致
      #   bundle_identifier: com.ccgametest.live
      vars:
        # 自定义包名，修改后影响较大
        # （ios得事先在苹果开发者平台添加指定包名以及描述文件以及推送证书，并上传codemagic以及推送平台，android只需更新推送平台信息）
        PACKAGE_NAME: "com.ccgametest2.live"
        # 自定义待加载的极光推送的 JPUSH_APP_KEY【与 PACKAGE_NAME 包名高度绑定，一旦包名变更，此值也须变更，主要受推送平台影响】
        JPUSH_APP_KEY: "8b68b9303424eadca9e99ae9"
        # 自定义应用版本号
        APP_VERSION: "1.0.2"
        # 自定义应用构建号
        BUILD_NUMBER: "1"
        # 自定义应用名称
        APP_NAME: "CCGAME2"
        # 自定义待加载的 web 网址 以及 网址中用来请求的api链接
        WEB_URL: "https://new.ccgametest.live"

      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      # android. 配置local.properties
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"

      # ios. 设置签名
      # - name: Set up code signing settings on Xcode project
      #   script: |
      #     xcode-project use-profiles

      # 获取Flutter依赖
      - name: Get Flutter packages
        script: |
          flutter pub get

      # flutter：修改应用包名（android、ios），此步骤修改之后会影响推送且ios会无法出包，
      # 请定位至 bundle_identifier，PACKAGE_NAME、JPUSH_APP_KEY等变量处对照处理后再执行打包脚本
      - name: Update android ios package name
        script: |
          echo "Update android ios package name..."
          dart run change_app_package_name:main "${PACKAGE_NAME}"

      # flutter：更新应用名称
      - name: Update app name
        script: |
          echo "Updating app name..."
          dart run rename_app:main all="${APP_NAME}"

      # flutter：更新用户图标，此步骤需先在flutter项目中更新图标资源文件后才能应用新图标
      - name: Update app icons
        script: |
          echo "Update icons..."
          dart run flutter_launcher_icons

      # flutter：更新启动图资源，此步骤需先在flutter项目中更新启动页资源文件后才能应用新的启动图
      - name: Update splash screen
        script: |
          echo "Updating splash screen..."
          dart run flutter_native_splash:create --path=./flutter_native_splash.yaml

      # flutter：更新项目 webUrl.dart 文件中的内容
      - name: Update flutter webUrl.dart
        script: |
          echo "Update webUrl.dart..."
          sed -e "s#const String webUrl = '[^']*'#const String webUrl = '${WEB_URL}'#g" \
              -e "s#const String jpushAppKey = '[^']*'#const String jpushAppKey = '${JPUSH_APP_KEY}'#g" \
              lib/webUrl.dart > lib/webUrl.dart.tmp && mv lib/webUrl.dart.tmp lib/webUrl.dart
  
          echo "Verifying updated variables..."
          cat lib/webUrl.dart

      # android. 打包构建安卓apk
      - name: Build apk with Flutter
        script: |
          flutter build apk \
            --build-name="${APP_VERSION}" --build-number="${BUILD_NUMBER}" \
            --no-tree-shake-icons --split-per-abi

      # ios. 安装 Pods
      # - name: Install pods
      #   script: |
      #     find . -name "Podfile" -execdir pod install \;

      # ios. 打包构建苹果ipa
      # - name: Build ipa with Flutter
      #   script: |
      #     flutter build ipa --release \
      #       --build-name="${APP_VERSION}" --build-number="${BUILD_NUMBER}" \
      #       --export-options-plist=/Users/builder/export_options.plist

    artifacts:
      - build/app/outputs/flutter-apk/**/*.apk
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - xs121913958@163.com
        notify:
          success: true
          failure: false

  # Flutter构建流水线（ios非签名版本）
  flutter-workflow-nosign:
    name: Flutter Workflow Nosign
    instance_type: mac_mini_m2
    max_build_duration: 120
    environment:
      # android签名信息
      android_signing:
        - cc_game_apk_jks
      vars:
        # 自定义包名，修改后影响较大
        # ios推送证书未知，android需更新推送平台信息
        PACKAGE_NAME: "com.ccgametest.life"
        # 自定义待加载的极光推送的 JPUSH_APP_KEY【与 PACKAGE_NAME 包名高度绑定，一旦包名变更，此值也须变更，主要受推送平台影响】
        JPUSH_APP_KEY: "8b68b9303424eadca9e99ae9"
        # 自定义应用版本号
        APP_VERSION: "1.0.1"
        # 自定义应用构建号
        BUILD_NUMBER: "1"
        # 自定义应用名称
        APP_NAME: "CC GAME 2"
        # 自定义待加载的 web 网址 以及 网址中用来请求的api链接
        WEB_URL: "https://reimagined-memory-jjgwj4xwqgxrfq4p4-8080.app.github.dev?baseUrl=https://9212-bankski-game-v1h88uwaamm.ws-us121.gitpod.io"

      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      # android. 配置local.properties
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"

      # 获取Flutter依赖
      - name: Get Flutter packages
        script: |
          flutter pub get

      # flutter：修改应用包名（android、ios）
      # 修改后包名为 PACKAGE_NAME 对应的值，ios推送证书未知，android需更新推送平台信息
      - name: Update android ios package name
        script: |
          echo "Update android ios package name..."
          dart run change_app_package_name:main "${PACKAGE_NAME}"

      # flutter：更新应用名称
      - name: Update app name
        script: |
          echo "Updating app name..."
          dart run rename_app:main all="${APP_NAME}"

      # flutter：更新用户图标，此步骤需先在flutter项目中更新图标资源文件后才能应用新图标
      - name: Update app icons
        script: |
          echo "Update icons..."
          dart run flutter_launcher_icons

      # flutter：更新启动图资源，此步骤需先在flutter项目中更新启动页资源文件后才能应用新的启动图
      - name: Update splash screen
        script: |
          echo "Updating splash screen..."
          dart run flutter_native_splash:create --path=./flutter_native_splash.yaml

      # flutter：更新项目 webUrl.dart 文件中的内容
      - name: Update flutter webUrl.dart
        script: |
          echo "Update webUrl.dart..."
          sed -e "s#const String webUrl = '[^']*'#const String webUrl = '${WEB_URL}'#g" \
              -e "s#const String jpushAppKey = '[^']*'#const String jpushAppKey = '${JPUSH_APP_KEY}'#g" \
              lib/webUrl.dart > lib/webUrl.dart.tmp && mv lib/webUrl.dart.tmp lib/webUrl.dart
          
          echo "Verifying updated variables..."
          cat lib/webUrl.dart

      # android. 打包构建安卓apk
      - name: Build apk with Flutter
        script: |
          flutter build apk \
            --build-name="${APP_VERSION}" --build-number="${BUILD_NUMBER}" \
            --no-tree-shake-icons --split-per-abi

      # ios. 安装 Pods
      - name: Install pods
        script: |
          find . -name "Podfile" -execdir pod install \;

      # ios. 打包构建苹果ipa (未签名)
      - name: Build unsigned ipa with Flutter
        script: |
          flutter build ios --release \
            --no-codesign \
            --build-name="${APP_VERSION}" --build-number="${BUILD_NUMBER}"
          
          mkdir -p build/ios/ipa
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r ../ipa/Runner-unsigned.ipa Payload

    artifacts:
      - build/app/outputs/flutter-apk/**/*.apk
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - xs121913958@163.com
        notify:
          success: true
          failure: false
